/*
Java.lang package contains classes that apply to the language itself.
it contains some important classes like math,string,string buffer etc...
all these classes are automatically imported in the program
String class
        there are several convinent methods in string class. it is important
        to remembee that the original string is not modified since strings are
        immutable. the table lists some of the important methods of string class

S="welcome";
Methods                                 Description

char charAt(int index)                  Returns the indexed character of a
                                        string, where the index of the
                                        initial character is 0.

String concat(String a)                 Returns a new stringconsisting of the
                                        old string followed by a.


)                 performs a lexial comparison; returns
                                        an int less than 0 if the current
                                        string is less than a, equal to 0 if
                                        the strings are identical, and greater
                                        than 0 if the current string is greater
                                        than 0.

boolean endsWith(String suffix)         Returns true if the string ends with
                                        suffix, otherwise returns false.



boolean equals(object ob)               Returns true if od instance of string,
                                        and the string encapsulated by ob matches
                                        the string encapsulated by ob matches the
                                        string encapsulated by the existing object.

boolean equalsIgnoreCase(String a)      This is like the equals(), but the argument
                                        is a  string, and the comparision ignore case.

int indexOf(char ch)                    returns the index within the current
                                        string of the first occurance of ch. Alternative
                                        form return the index of a string, and begin
                                        searching from a specified offset.

int lastIndexOf(char ch)                Returns th index within the current
                                        string of the last occurance of ch.
                                        Alternative forms returns the index
                                        of a string, and end searching at a
                                        specified offset from the end of the string.

int length()                            returns the number of characters in the
                                        current string.

replace(char old, char new)             returns a new string, generated by
                                        repalcing every occurance of old
                                        with new.

boolean startsWith(string prefix)       returns true if the current string
                                        begins with prefix, otherwise returns
                                        false.

String subString(int startindex)        Returns the substring, beginning at
                                        start index, of the current string
                                        and extending to the end of the
                                        current string. An alternative form
                                        specifies starting and ending offsets.

String toLowerCase()                    Converts the executing object to
                                        lowercase and returns a new string.

String toString()                        Returns the executing object.

String toUpperCase()                    Converts the executing object to
                                        uppercase and returns a new string.

                                        Returns the string that results from
String trim()                           removing whitespaces characters from
                                        the beginning andending of the current
                                        string

*/

class lanstring
{
        public static void main(String ar[])
        {
                String s="Karthik Finished B.SC Computer science"+
                         " in Madras university and M.C.A in"+
                         " IGNOU and working in SSI";
               String s1="   Haity Karthik ";

                String s2="  Hai ";

                String s3="Best of luck Karthik";

                char x='t';

                System.out.println(s);

                System.out.println(" 5th Character of String s1="+s1.charAt(5));

                  System.out.println("Last index of t = "+s1.lastIndexOf(x));
 
                   System.out.println("Index of (t,10) = "+s1.indexOf('t',7));

                 System.out.println(s1.substring(6));

                  System.out.println("Substring = "+s1.substring(3,8));
 
                System.out.println(s2.concat("Friends"));

              System.out.println(s3.startsWith("Best"));
                
               System.out.println(s3.replace('i','e'));

               System.out.println(s.toUpperCase());

               System.out.println("Length of S1 = "+s2.length());

                System.out.println("the length of trimmed string s1 = "+s2.trim().length()); 

        }
}














                                                                               
